// This effect Copyright (C) 2007, Daryl Pierce 
// All rights reserved
desc: RACE3 ambiophonic filter (absolute timing)
slider1:10<10,3200,2>delay (Âµs)
slider2:87<0,100,.5>feedback (%)
slider3:0<-10,0,.5>mix in (dB)
slider4:0<-120,0,.5>output wet (dB)
slider5:-5<-120,0,.5>output dry (dB)
slider6:0<0,5,1{1+2,3+4,5+6,7+8,9+10,Mains+Phones}>Process Channels
slider7:0<0,1,1>Mid channel pass through
slider8:80<0,20000,1>HPF
slider9:8000<0,20000,1>LPF
slider10:1<1,200,1>Current delay (samples)

@init
delaypos=0;

HPF = 80; // 80;y

LPF = 8000; // 8000;

min_d = 1/srate*1000000;


@slider
odelay = delaylen;
wetmix = slider2/100;
drymix = 2 ^(slider3/6);
wetmix2 = 2 ^(slider4/6);
drymix2 = 2 ^(slider5/6);
HPF = slider8;
LPF = slider9;

gain = 10^(0/20);


//HPF
a1 = 10;
s1 = 1;
q1 = 1 / (sqrt((a1 + 1/a1)*(1/s1 - 1) + 2));
w01 = 2 * $pi * HPF/srate;
cosw01 = cos(w01);
sinw01 = sin(w01);
alpha1 = sinw01 / (2 * q1);

b01 = (1 + cosw01)/2;
b11 = -(1 + cosw01);
b21 = (1 + cosw01)/2;
a01 = 1 + alpha1;
a11 = -2 * cosw01;
a21 = 1 - alpha1;
b01 /= a01;
b11 /= a01;
b21 /= a01;
a11 /= a01;
a21 /= a01;

//LPF
a9 = 1;
s9 = 1;
q9 = .7 / (sqrt((a9 + 1/a9)*(1/s9 - 1) + 2));
w09 = 2 * $pi * LPF/srate;
cosw09 = cos(w09);
sinw09 = sin(w09);
alpha9 = sinw09 / (2 * q9);

b09 = (1 - cosw09)/2;
b19 = (1 - cosw09);
b29 = (1 - cosw09)/2;
a09 = 1 + alpha9;
a19 = -2 * cosw09;
a29 = 1 - alpha9;
b09 /= a09;
b19 /= a09;
b29 /= a09;
a19 /= a09;
a29 /= a09;


@block

// delaylen = slider1;
delaylen = floor((slider1/1000000)*srate);
delaylen < 1 ? delaylen = 1;
slider10 = delaylen;

freembuf(delaylen*4);
delaypos >= delaylen || delaypos < 0 ? delaypos = 0;


@sample
slider6 == 0 ? (outL = spl0; outR = spl1;);
slider6 == 1 ? (outL = spl2; outR = spl3;);
slider6 == 2 ? (outL = spl4; outR = spl5;);
slider6 == 3 ? (outL = spl6; outR = spl7;);
slider6 == 4 ? (outL = spl8; outR = spl9;);
slider6 == 5 ? (outL = spl0; outR = spl1; passL = spl0; passR = spl1;);

m=(outL+outR) * .5;
n=(outL-outR) * .5;

//delay only HPF and LPF
HPF != 0 ? (
ospl1 = n;
n = b01 * n + b11 * xr11 + b21 * xr21 - a11 * yr11 - a21 * yr21;
xr21 = xr11;
xr11 = ospl1;
yr21 = yr11;
yr11 = n ;
);

LPF != 22000 ? (
ospl1 = n;
n = b09 * n + b19 * xr19 + b29 * xr29 - a19 * yr19 - a29 * yr29;
xr29 = xr19;
xr19 = ospl1;
yr29 = yr19;
yr19 = n;
);




dpint = delaypos*2;


os1=dpint[1];
os2=dpint[0];


os1 *= -1 ;
os2 *= -1 ;


dpint[0]=min(max((+.5*n)*drymix + os1*wetmix,-4),4);
dpint[1]=min(max((-.5*n)*drymix + os2*wetmix,-4),4);

 
(delaypos+=1) >= delaylen ? delaypos=0;

outL=(outL+(m*.5))*drymix2 + os1*wetmix2;
outR=(outR+(m*.5))*drymix2 + os2*wetmix2;


slider6==0 ? (spl0=outL; spl1=outR;);
slider6==1 ? (spl2=outL; spl3=outR;);
slider6==2 ? (spl4=outL; spl5=outR;);
slider6==3 ? (spl6=outL; spl7=outR;);
slider6==4 ? (spl8=outL; spl9=outR;);
slider6==5 ? (spl0=passL; spl1=passR; spl2=outL; spl3=outR;);

